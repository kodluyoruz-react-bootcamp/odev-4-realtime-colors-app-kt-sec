{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/user/Downloads/Coding/React/Assignments/odev-4-realtime-colors-app-kt-sec/client/src/componets/ColorPicker/ColorInput.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, memo } from 'react'; //import InputColor from 'react-input-color';\n\nimport ColorContext from '../../contexts/ColorContext';\nimport { sendColor } from '../../services/websocket';\nimport { hexToHSL } from '../../lib/hexToHSL';\n\nfunction ColorInput() {\n  _s();\n\n  const {\n    user,\n    color,\n    setColor\n  } = useContext(ColorContext);\n\n  const handleColorChange = c => {\n    const hslValue = hexToHSL(c.target.value);\n    const colorVal = {\n      \"username\": user,\n      \"hex\": c.target.value,\n      \"v\": hslValue.s\n    };\n    setColor(colorVal); // Send color to socket.\n\n    sendColor({\n      \"username\": user,\n      \"hex\": c.target.value\n    });\n    localStorage.setItem(\"lastColor\", colorVal.hex);\n    console.log(localStorage.getItem(\"lastColor\").hex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"color\",\n    className: \"colorPicker\",\n    style: {\n      \"height\": \"50px\",\n      \"width\": \"50px\",\n      border: color.v < 60 ? \"2px solid white\" : \"2px solid black\"\n    },\n    value: color.hex,\n    onChange: c => {\n      handleColorChange(c);\n    },\n    placement: \"center\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this) // <InputColor \n  //     className=\"colorPicker\"\n  //     style={{\n  //       \"height\":\"50px\",\n  //       \"width\":\"50px\",\n  //       border:(color.v<60)?\"2px solid white\":\"2px solid black\"\n  //     }}\n  //     initialValue={color.hex}\n  //     onChange={(c)=>{handleColorChange(c)}}\n  //     placement=\"center\"\n  //   />\n  ;\n}\n\n_s(ColorInput, \"ctG5K4elrPzQKL00p7caAl5entA=\");\n\n_c = ColorInput;\nexport default _c2 = /*#__PURE__*/memo(ColorInput);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ColorInput\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/user/Downloads/Coding/React/Assignments/odev-4-realtime-colors-app-kt-sec/client/src/componets/ColorPicker/ColorInput.js"],"names":["useContext","memo","ColorContext","sendColor","hexToHSL","ColorInput","user","color","setColor","handleColorChange","c","hslValue","target","value","colorVal","s","localStorage","setItem","hex","console","log","getItem","border","v"],"mappings":";;;;;AAAA,SAAQA,UAAR,EAAmBC,IAAnB,QAA8B,OAA9B,C,CACA;;AAEA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,SAAQC,SAAR,QAAwB,0BAAxB;AAEA,SAAQC,QAAR,QAAuB,oBAAvB;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA,KAAN;AAAYC,IAAAA;AAAZ,MAAwBR,UAAU,CAACE,YAAD,CAAxC;;AAEA,QAAMO,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAMC,QAAQ,GAAGP,QAAQ,CAACM,CAAC,CAACE,MAAF,CAASC,KAAV,CAAzB;AACA,UAAMC,QAAQ,GAAG;AACf,kBAAWR,IADI;AAEf,aAAMI,CAAC,CAACE,MAAF,CAASC,KAFA;AAGf,WAAIF,QAAQ,CAACI;AAHE,KAAjB;AAMAP,IAAAA,QAAQ,CAACM,QAAD,CAAR,CAR+B,CAS/B;;AACAX,IAAAA,SAAS,CAAC;AACP,kBAAWG,IADJ;AAEP,aAAMI,CAAC,CAACE,MAAF,CAASC;AAFR,KAAD,CAAT;AAICG,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiCH,QAAQ,CAACI,GAA1C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAY,CAACK,OAAb,CAAqB,WAArB,EAAkCH,GAA9C;AACF,GAhBD;;AAkBA,sBACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,aAFZ;AAGE,IAAA,KAAK,EAAE;AACL,gBAAS,MADJ;AAEL,eAAQ,MAFH;AAGLI,MAAAA,MAAM,EAAEf,KAAK,CAACgB,CAAN,GAAQ,EAAT,GAAa,iBAAb,GAA+B;AAHjC,KAHT;AAQE,IAAA,KAAK,EAAEhB,KAAK,CAACW,GARf;AASE,IAAA,QAAQ,EAAGR,CAAD,IAAK;AAACD,MAAAA,iBAAiB,CAACC,CAAD,CAAjB;AAAqB,KATvC;AAUE,IAAA,SAAS,EAAC;AAVZ;AAAA;AAAA;AAAA;AAAA,UADF,CAeE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBF;AA2BD;;GAhDQL,U;;KAAAA,U;AAkDT,kCAAeJ,IAAI,CAACI,UAAD,CAAnB","sourcesContent":["import {useContext,memo} from 'react';\n//import InputColor from 'react-input-color';\n\nimport ColorContext from '../../contexts/ColorContext';\n\nimport {sendColor} from '../../services/websocket';\n\nimport {hexToHSL} from '../../lib/hexToHSL';\n\nfunction ColorInput() {\n  const {user,color,setColor} = useContext(ColorContext);\n\n  const handleColorChange = (c) => {\n    const hslValue = hexToHSL(c.target.value);\n    const colorVal = {\n      \"username\":user,\n      \"hex\":c.target.value,\n      \"v\":hslValue.s\n    };\n\n    setColor(colorVal);\n    // Send color to socket.\n    sendColor({\n       \"username\":user,\n       \"hex\":c.target.value\n     });\n     localStorage.setItem(\"lastColor\",colorVal.hex);\n     console.log(localStorage.getItem(\"lastColor\").hex);\n  }\n\n  return (\n    <input \n      type=\"color\"\n      className=\"colorPicker\"\n      style={{\n        \"height\":\"50px\",\n        \"width\":\"50px\",\n        border:(color.v<60)?\"2px solid white\":\"2px solid black\"\n      }}\n      value={color.hex}\n      onChange={(c)=>{handleColorChange(c)}}\n      placement=\"center\"\n    >\n    \n    </input>\n    // <InputColor \n    //     className=\"colorPicker\"\n    //     style={{\n    //       \"height\":\"50px\",\n    //       \"width\":\"50px\",\n    //       border:(color.v<60)?\"2px solid white\":\"2px solid black\"\n    //     }}\n    //     initialValue={color.hex}\n    //     onChange={(c)=>{handleColorChange(c)}}\n    //     placement=\"center\"\n    //   />\n  )\n}\n\nexport default memo(ColorInput);\n"]},"metadata":{},"sourceType":"module"}
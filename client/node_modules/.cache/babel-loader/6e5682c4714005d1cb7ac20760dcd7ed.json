{"ast":null,"code":"export const hexToHSL = H => {\n  // Convert hex to RGB first\n  let r = 0,\n      g = 0,\n      b = 0;\n\n  if (H.length === 4) {\n    r = \"0x\" + H[1] + H[1];\n    g = \"0x\" + H[2] + H[2];\n    b = \"0x\" + H[3] + H[3];\n  } else if (H.length === 7) {\n    r = \"0x\" + H[1] + H[2];\n    g = \"0x\" + H[3] + H[4];\n    b = \"0x\" + H[5] + H[6];\n  } // Then to HSL\n\n\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  let cmin = Math.min(r, g, b),\n      cmax = Math.max(r, g, b),\n      delta = cmax - cmin,\n      h = 0,\n      s = 0,\n      l = 0;\n  if (delta === 0) h = 0;else if (cmax === r) h = (g - b) / delta % 6;else if (cmax === g) h = (b - r) / delta + 2;else h = (r - g) / delta + 4;\n  h = Math.round(h * 60);\n  if (h < 0) h += 360;\n  l = (cmax + cmin) / 2;\n  s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n  s = +(s * 100).toFixed(1);\n  l = +(l * 100).toFixed(1); //return \"hsl(\" + h + \",\" + s + \"%,\" + l + \"%)\";\n\n  return {\n    \"h\": h,\n    \"s\": s,\n    \"l\": l\n  };\n};","map":{"version":3,"sources":["/home/user/Downloads/Coding/React/Assignments/odev-4-realtime-colors-app-kt-sec/client/src/lib/hexToHSL.js"],"names":["hexToHSL","H","r","g","b","length","cmin","Math","min","cmax","max","delta","h","s","l","round","abs","toFixed"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAIC,CAAD,IAAO;AAC7B;AACA,MAAIC,CAAC,GAAG,CAAR;AAAA,MAAWC,CAAC,GAAG,CAAf;AAAA,MAAkBC,CAAC,GAAG,CAAtB;;AACA,MAAIH,CAAC,CAACI,MAAF,KAAa,CAAjB,EAAoB;AAClBH,IAAAA,CAAC,GAAG,OAAOD,CAAC,CAAC,CAAD,CAAR,GAAcA,CAAC,CAAC,CAAD,CAAnB;AACAE,IAAAA,CAAC,GAAG,OAAOF,CAAC,CAAC,CAAD,CAAR,GAAcA,CAAC,CAAC,CAAD,CAAnB;AACAG,IAAAA,CAAC,GAAG,OAAOH,CAAC,CAAC,CAAD,CAAR,GAAcA,CAAC,CAAC,CAAD,CAAnB;AACD,GAJD,MAIO,IAAIA,CAAC,CAACI,MAAF,KAAa,CAAjB,EAAoB;AACzBH,IAAAA,CAAC,GAAG,OAAOD,CAAC,CAAC,CAAD,CAAR,GAAcA,CAAC,CAAC,CAAD,CAAnB;AACAE,IAAAA,CAAC,GAAG,OAAOF,CAAC,CAAC,CAAD,CAAR,GAAcA,CAAC,CAAC,CAAD,CAAnB;AACAG,IAAAA,CAAC,GAAG,OAAOH,CAAC,CAAC,CAAD,CAAR,GAAcA,CAAC,CAAC,CAAD,CAAnB;AACD,GAX4B,CAY7B;;;AACAC,EAAAA,CAAC,IAAI,GAAL;AACAC,EAAAA,CAAC,IAAI,GAAL;AACAC,EAAAA,CAAC,IAAI,GAAL;AACA,MAAIE,IAAI,GAAGC,IAAI,CAACC,GAAL,CAASN,CAAT,EAAWC,CAAX,EAAaC,CAAb,CAAX;AAAA,MACIK,IAAI,GAAGF,IAAI,CAACG,GAAL,CAASR,CAAT,EAAWC,CAAX,EAAaC,CAAb,CADX;AAAA,MAEIO,KAAK,GAAGF,IAAI,GAAGH,IAFnB;AAAA,MAGIM,CAAC,GAAG,CAHR;AAAA,MAIIC,CAAC,GAAG,CAJR;AAAA,MAKIC,CAAC,GAAG,CALR;AAOA,MAAIH,KAAK,KAAK,CAAd,EACEC,CAAC,GAAG,CAAJ,CADF,KAEK,IAAIH,IAAI,KAAKP,CAAb,EACHU,CAAC,GAAI,CAACT,CAAC,GAAGC,CAAL,IAAUO,KAAX,GAAoB,CAAxB,CADG,KAEA,IAAIF,IAAI,KAAKN,CAAb,EACHS,CAAC,GAAG,CAACR,CAAC,GAAGF,CAAL,IAAUS,KAAV,GAAkB,CAAtB,CADG,KAGHC,CAAC,GAAG,CAACV,CAAC,GAAGC,CAAL,IAAUQ,KAAV,GAAkB,CAAtB;AAEFC,EAAAA,CAAC,GAAGL,IAAI,CAACQ,KAAL,CAAWH,CAAC,GAAG,EAAf,CAAJ;AAEA,MAAIA,CAAC,GAAG,CAAR,EACEA,CAAC,IAAI,GAAL;AAEFE,EAAAA,CAAC,GAAG,CAACL,IAAI,GAAGH,IAAR,IAAgB,CAApB;AACAO,EAAAA,CAAC,GAAGF,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkBA,KAAK,IAAI,IAAIJ,IAAI,CAACS,GAAL,CAAS,IAAIF,CAAJ,GAAQ,CAAjB,CAAR,CAA3B;AACAD,EAAAA,CAAC,GAAG,CAAC,CAACA,CAAC,GAAG,GAAL,EAAUI,OAAV,CAAkB,CAAlB,CAAL;AACAH,EAAAA,CAAC,GAAG,CAAC,CAACA,CAAC,GAAG,GAAL,EAAUG,OAAV,CAAkB,CAAlB,CAAL,CAxC6B,CA0C7B;;AACA,SAAO;AACL,SAAIL,CADC;AAEL,SAAIC,CAFC;AAGL,SAAIC;AAHC,GAAP;AAKD,CAhDM","sourcesContent":["export const hexToHSL = (H) => {\n  // Convert hex to RGB first\n  let r = 0, g = 0, b = 0;\n  if (H.length === 4) {\n    r = \"0x\" + H[1] + H[1];\n    g = \"0x\" + H[2] + H[2];\n    b = \"0x\" + H[3] + H[3];\n  } else if (H.length === 7) {\n    r = \"0x\" + H[1] + H[2];\n    g = \"0x\" + H[3] + H[4];\n    b = \"0x\" + H[5] + H[6];\n  }\n  // Then to HSL\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  let cmin = Math.min(r,g,b),\n      cmax = Math.max(r,g,b),\n      delta = cmax - cmin,\n      h = 0,\n      s = 0,\n      l = 0;\n\n  if (delta === 0)\n    h = 0;\n  else if (cmax === r)\n    h = ((g - b) / delta) % 6;\n  else if (cmax === g)\n    h = (b - r) / delta + 2;\n  else\n    h = (r - g) / delta + 4;\n\n  h = Math.round(h * 60);\n\n  if (h < 0)\n    h += 360;\n\n  l = (cmax + cmin) / 2;\n  s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n  s = +(s * 100).toFixed(1);\n  l = +(l * 100).toFixed(1);\n\n  //return \"hsl(\" + h + \",\" + s + \"%,\" + l + \"%)\";\n  return {\n    \"h\":h,\n    \"s\":s,\n    \"l\":l\n  };\n}"]},"metadata":{},"sourceType":"module"}